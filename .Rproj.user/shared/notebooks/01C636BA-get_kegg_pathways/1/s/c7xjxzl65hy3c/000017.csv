"0",""
"0","pathway_df <- data.frame("
"0","  genus = character(),"
"0","  species = character(),"
"0","  genome_id = character(),"
"0","  kegg_pathway_id = character(),"
"0","  kegg_pathway_name = character(),"
"0","  stringsAsFactors = FALSE)"
"0",""
"0",""
"0","get_kegg_pathways <- function(genus) {"
"0","  tryCatch({"
"0","    # Fetch KEGG data for the genus"
"0","    species <- keggFind(""genome"", genus)"
"0","    species <- species[!grepl(""phage"", species)]  # Filter out entries with ""phage"""
"0","    "
"0","    genome_ids <- names(species)"
"0","    genome_ids <- sub(""gn:"", """", genome_ids)  # Strip ""gn:"" prefix"
"0","    # print(species)"
"0","    # print(genome_ids)"
"0","    # "
"0","    species_names <- as.vector(species)  # Convert species data to a vector"
"0","    genome_to_species <- setNames(species_names, genome_ids)  # Create mapping of genome ID to species name"
"0","    "
"0","    # Initialize an empty data frame to store results"
"0","    result_df <- data.frame("
"0","      genus = character(),"
"0","      species = character(),"
"0","      genome_id = character(),"
"0","      kegg_pathway_id = character(),"
"0","      kegg_pathway_name = character(),"
"0","      stringsAsFactors = FALSE"
"0","    )"
"0","    "
"0","    for (genome_id in genome_ids) {"
"0","      # print(genome_id)"
"0","      # Fetch pathways for the genome ID"
"0","      pathways <- names(keggList(""pathway"", genome_id))"
"0","      # print(pathways)"
"0","      for (pathway_id in pathways) {"
"0","        "
"0","        # print(pathway_id)"
"0","        # Get pathway details"
"0","        pathway <- keggGet(pathway_id)[[1]]"
"0","        kegg_pathway_id <- pathway$KO_PATHWAY"
"0","        kegg_pathway_name <- pathway$NAME"
"0","        "
"0","        # print(pathway)"
"0","        # print(kegg_pathway_id)"
"0","        # print(kegg_pathway_name)"
"0","        "
"0","        # Get species name for the genome ID"
"0","        species_name <- genome_to_species[genome_id]"
"0","        "
"0","        # print(species_name)"
"0","        "
"0","        # Append results to the data frame"
"0","        result_df <- rbind(result_df, data.frame("
"0","          genus = genus,"
"0","          species = species_name,"
"0","          genome_id = genome_id,"
"0","          kegg_pathway_id = kegg_pathway_id,"
"0","          kegg_pathway_name = kegg_pathway_name,"
"0","          stringsAsFactors = FALSE"
"0","        ))"
"0","      }"
"0","    }"
"0","    # print(result_df)"
"0","    return(result_df)"
"0","    "
"0","  }, error = function(e) {"
"0","    message(""An error occurred: "", e$message)"
"0","  })"
"0","}"
"0",""
"0","genera <- unique(otu_taxonomy$genus)"
"0",""
"0","for (genus in genera) {"
"0","  print(genus)"
"0","  pathway_info <- get_kegg_pathways(genus)"
"0","  "
"0","  if (!is.null(pathway_info)) {"
"0","    pathway_df <- rbind(pathway_df, pathway_info)  # Append the gene's pathway data to final_df"
"0","  } else {"
"0","    pathway_df <- rbind(pathway_df, data.frame("
"0","      genus = character(),"
"0","      species = character(),"
"0","      genome_id = character(),"
"0","      kegg_pathway_id = character(),"
"0","      kegg_pathway_name = character(),"
"0","      stringsAsFactors = FALSE))"
"0","  }"
"0","}"
"1","[1]"
"1"," ""Faecalibacterium"""
"1","
"
"2","An error occurred: numbers of columns of arguments do not match
"
"1","[1]"
"1"," ""Phocaeicola"""
"1","
"
"2","An error occurred: numbers of columns of arguments do not match
"
"1","[1]"
"1"," ""Blautia"""
"1","
"
"2","An error occurred: numbers of columns of arguments do not match
"
"1","[1]"
"1"," ""Bifidobacterium"""
"1","
"
"2","An error occurred: numbers of columns of arguments do not match
"
"1","[1]"
"1"," ""Escherichia/Shigella"""
"1","
"
"2","An error occurred: Bad Request (HTTP 400).
"
"1","[1]"
"1"," ""Agathobacter"""
"1","
"
