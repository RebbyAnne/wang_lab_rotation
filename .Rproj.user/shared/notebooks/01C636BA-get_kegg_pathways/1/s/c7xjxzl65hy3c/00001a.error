{"frames":[{"func":"get_kegg_pathways(genus)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatch({\n    species <- keggFind(\"genome\", genus)\n    species <- species[!grepl(\"phage\", species)]\n    genome_ids <- names(species) ...","file":"","line_number":2,"end_line_number":63,"character_number":3,"end_character_number":4},{"func":"tryCatchList(expr, classes, parentenv, handlers)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchOne(expr, names, parentenv, handlers[[1L]])","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"doTryCatch(return(expr), name, parentenv, handler)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"keggGet(pathway_id)","file":"","line_number":34,"end_line_number":34,"character_number":9,"end_character_number":43},{"func":".getUrl(url, .flatFileParser)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"GET(url)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"request_perform(req, hu$handle$handle)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"request_fetch(req$output, req$url, handle)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"request_fetch.write_memory(req$output, req$url, handle)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"curl::curl_fetch_memory(url, handle = handle)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"numbers of columns of arguments do not match"}